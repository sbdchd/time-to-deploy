version: 2

jobs:
  test:
    docker:
      - image: circleci/node:12.4.0
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - restore_cache:
          keys:
            - time-to-deploy-cache-v1-{{ checksum "yarn.lock" }}
      - run:
          name: install dependencies
          working_directory: docs
          command: yarn install --frozen-lockfile --non-interactive
      - save_cache:
          paths:
            - ./node_modules
          key: time-to-deploy-cache-v1-{{ checksum "yarn.lock" }}
      - run:
          name: run typechecker
          command: ./s/test

  lint:
    docker:
      - image: circleci/node:12.4.0
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - restore_cache:
          keys:
            - time-to-deploy-cache-v1-{{ checksum "yarn.lock" }}
      - run:
          name: install dependencies
          command: yarn install --frozen-lockfile --non-interactive
      - save_cache:
          paths:
            - ./node_modules
          key: time-to-deploy-cache-v1-{{ checksum "yarn.lock" }}
      - run:
          name: lint
          command: ./s/lint

  build:
    docker:
      - image: circleci/node:12.4.0
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - restore_cache:
          keys:
            - time-to-deploy-cache-v1-{{ checksum "yarn.lock" }}
      - run:
          name: install dependencies
          command: yarn install --frozen-lockfile --non-interactive
      - save_cache:
          paths:
            - ./node_modules
          key: time-to-deploy-cache-v1-{{ checksum "yarn.lock" }}
      - run:
          name: build
          command: ./s/build

  shellcheck:
    docker:
      - image: ubuntu:18.04
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            apt-get update
            apt-get install -y git shellcheck
      - run:
          name: run shellcheck
          command: |
            ./s/shellcheck

workflows:
  version: 2
  all:
    jobs:
      - shellcheck

  docs:
    jobs:
      - test
      - lint
      - build
