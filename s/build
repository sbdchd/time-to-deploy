#!/usr/bin/env python3
import subprocess
import argparse
import logging
import os
import shutil

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__file__)


def main() -> None:
    parser = argparse.ArgumentParser(description="build time-to-deploy")
    parser.add_argument(
        "release",
        type=str,
        help="release name used for in Sentry, usually a git sha",
    )
    args = parser.parse_args()
    release_name = args.release

    logging.info("removing old deploy zip & clearing build dir")

    shutil.rmtree("build")
    os.remove("deploy.zip")

    logging.info("compiling source files for release: %s", release_name)

    subprocess.run(
        [
            "./node_modules/.bin/esbuild",
            "src/index.ts",
            "--platform=node",
            f"--define:process.env.TTD_SENTRY_RELEASE='{release_name}'",
            "--bundle",
            "--minify",
            "--sourcemap",
            "--target=node12",
            "--outfile=build/index.js",
        ],
        check=True,
        capture_output=True,
    )

    logging.info("zipping source files")
    subprocess.run(
        [
            "zip",
            "--recurse-paths",
            "--junk-paths",
            "--quiet",
            "deploy.zip",
            "build/index.js",
        ],
        check=True,
        capture_output=True,
    )

    res = subprocess.run(["du", "-h", "deploy.zip"], check=True, capture_output=True)
    logging.info("total size: %s", res.stdout.decode().strip())
    logging.info("done")


if __name__ == "__main__":
    main()
